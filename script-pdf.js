document.getElementById('file-input')?.addEventListener('change', async (event) => {
    const file = event.target.files[0];
    if (!file) return;

    if (file.type === 'application/pdf') {
        console.log("üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º PDF...");

        const fileReader = new FileReader();
        fileReader.onload = async function () {
            const typedArray = new Uint8Array(fileReader.result);

            // –ß–∏—Ç–∞–µ–º PDF
            const pdf = await pdfjsLib.getDocument({ data: typedArray }).promise;

            let fullText = '';

            // –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
            for (let i = 1; i <= pdf.numPages; i++) {
                const page = await pdf.getPage(i);
                const textContent = await page.getTextContent();
                const pageText = textContent.items.map(item => item.str).join(' ');
                fullText += pageText + ' ';
            }

            console.log("üìÑ –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ PDF:", fullText.slice(0, 500));

            // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
            const chunkSize = 40000; // ~10,000 —Ç–æ–∫–µ–Ω–æ–≤
            const chunks = [];

            for (let i = 0; i < fullText.length; i += chunkSize) {
                chunks.push(fullText.slice(i, i + chunkSize));
            }

            console.log(`üìÑ –¢–µ–∫—Å—Ç —Ä–∞–∑–¥–µ–ª—ë–Ω –Ω–∞ ${chunks.length} —á–∞—Å—Ç–µ–π`);

            // === –°—é–¥–∞ –±—É–¥–µ–º —Å–æ–±–∏—Ä–∞—Ç—å –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã ===
           let allQuestions = [];

for (let i = 0; i < chunks.length; i++) {
    const chunk = chunks[i];

    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∞—Å—Ç—å ${i + 1} –∏–∑ ${chunks.length}`);
    console.log(`üìÑ –¢–µ–∫—Å—Ç —á–∞—Å—Ç–∏ ${i + 1}:`, chunk.slice(0, 200));

    try {
        const questions = await generateTestFromText(chunk, i + 1);
        console.log(`üéØ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (—á–∞—Å—Ç—å ${i + 1}):`, questions);

        if(createSingleChoiceCard )console.log('gbltweokrtmkhrtkih!!!!!!!!!!!!!');
        allQuestions = [...allQuestions, ...questions];
            // ‚úÖ –í—ã–≤–æ–¥–∏–º –≤–æ–ø—Ä–æ—Å—ã —Å—Ä–∞–∑—É
                    renderQuestionCards(allQuestions);

    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —á–∞—Å—Ç–∏ ${i + 1}:`, error);
    }

       // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(r => setTimeout(r, 1000)); // 2 —Å–µ–∫—É–Ω–¥—ã
}

// ‚úÖ –í—ã–≤–æ–¥–∏–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
if (allQuestions.length > 0) {
    renderQuestionCards(allQuestions);
} else {
    console.warn("‚ö†Ô∏è –ù–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è");
}

        };

        fileReader.readAsArrayBuffer(file);

    } else {
        alert("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞");
    }
});
console.log("–ø–¥—Ñ")